from django.db import migrations


def add_import_data(apps, schema_editor):
    ImportApplicationType = apps.get_model("web", "ImportApplicationType")

    ImportApplicationType.objects.create(
        is_active=True,
        type="FA",
        sub_type="OIL",
        licence_type_code="FIREARMS",
        sigl_flag=False,
        chief_flag=True,
        chief_licence_prefix="GBOIL",
        paper_licence_flag=False,
        electronic_licence_flag=True,
        cover_letter_flag=True,
        cover_letter_schedule_flag=False,
        category_flag=True,
        default_licence_length_months=36,
        endorsements_flag=True,
        default_commodity_desc="Firearms, component parts thereof, or ammunition of any applicable commodity code, other than those falling under Section 5 of the Firearms Act 1968 as amended.",
        quantity_unlimited_flag=True,
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=False,
        multiple_commodities_flag=False,
        guidance_file_url="/docs/ApplyingForFirearmsOILLicence.pdf",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=True,
        type="FA",
        sub_type="DEACTIVATED",
        licence_type_code="FIREARMS",
        sigl_flag=False,
        chief_flag=True,
        chief_licence_prefix="GBSIL",
        paper_licence_flag=True,
        electronic_licence_flag=True,
        cover_letter_flag=True,
        cover_letter_schedule_flag=True,
        category_flag=True,
        default_licence_length_months=6,
        endorsements_flag=True,
        quantity_unlimited_flag=True,
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=False,
        multiple_commodities_flag=True,
        guidance_file_url="/docs/ApplyingForFirearmsSILLicence.pdf",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=True,
        type="FA",
        sub_type="SIL",
        licence_type_code="FIREARMS",
        sigl_flag=False,
        chief_flag=True,
        chief_licence_prefix="GBSIL",
        paper_licence_flag=True,
        electronic_licence_flag=True,
        cover_letter_flag=True,
        cover_letter_schedule_flag=True,
        category_flag=True,
        default_licence_length_months=6,
        endorsements_flag=True,
        quantity_unlimited_flag=False,
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=False,
        multiple_commodities_flag=True,
        guidance_file_url="/docs/ApplyingForFirearmsSILLicence.pdf",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=True,
        type="SAN",
        sub_type="SAN1",
        licence_type_code="SANCTIONS",
        sigl_flag=False,
        chief_flag=True,
        chief_licence_prefix="GBSAN",
        paper_licence_flag=False,
        electronic_licence_flag=True,
        cover_letter_flag=False,
        cover_letter_schedule_flag=False,
        category_flag=True,
        endorsements_flag=False,
        quantity_unlimited_flag=False,
        unit_list_csv="KGS,BARRELS",
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=True,
        multiple_commodities_flag=False,
        guidance_file_url="/docs/ApplyingForSanctionsLicence.pdf",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=True,
        type="WD",
        sub_type="QUOTA",
        licence_type_code="WOOD",
        sigl_flag=False,
        chief_flag=False,
        paper_licence_flag=True,
        electronic_licence_flag=False,
        cover_letter_flag=False,
        cover_letter_schedule_flag=False,
        category_flag=False,
        default_licence_length_months=12,
        endorsements_flag=False,
        quantity_unlimited_flag=False,
        unit_list_csv="M3",
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=True,
        multiple_commodities_flag=False,
        guidance_file_url="/docs/ApplyingForWoodLicence.pdf",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=False,
        type="GS",
        sub_type="CARS",
        licence_type_code="SURVEILLANCE",
        sigl_flag=False,
        chief_flag=True,
        chief_licence_prefix="GBAOG",
        paper_licence_flag=True,
        electronic_licence_flag=True,
        cover_letter_flag=False,
        cover_letter_schedule_flag=False,
        category_flag=False,
        default_licence_length_months=6,
        endorsements_flag=True,
        quantity_unlimited_flag=False,
        unit_list_csv="PCS",
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=True,
        multiple_commodities_flag=False,
        guidance_file_url="/docs/DoINeedAnImportLicence.pdf",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=False,
        type="OPT",
        sub_type="QUOTA",
        licence_type_code="OPT",
        sigl_flag=True,
        chief_flag=False,
        paper_licence_flag=True,
        electronic_licence_flag=False,
        cover_letter_flag=False,
        cover_letter_schedule_flag=False,
        category_flag=True,
        sigl_category_prefix="ZA,ZTA",
        default_licence_length_months=9,
        endorsements_flag=False,
        quantity_unlimited_flag=False,
        unit_list_csv="KGS",
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=True,
        multiple_commodities_flag=False,
        guidance_file_url="/docs/ApplyingForOPTLicence.pdf",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=False,
        type="TEX",
        sub_type="QUOTA",
        licence_type_code="QUOTA",
        sigl_flag=True,
        chief_flag=True,
        chief_licence_prefix="GBTEX",
        paper_licence_flag=True,
        electronic_licence_flag=True,
        cover_letter_flag=False,
        cover_letter_schedule_flag=False,
        category_flag=True,
        sigl_category_prefix="A",
        default_licence_length_months=6,
        endorsements_flag=True,
        quantity_unlimited_flag=False,
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=True,
        multiple_commodities_flag=False,
        guidance_file_url="/docs/ApplyingForTextilesLicence.pdf",
        licence_category_description="Goods of the commodity code in Box 10 or any other commodity code under the category valid at the time of issue.",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=False,
        type="IS",
        sub_type="QUOTA",
        licence_type_code="QUOTA",
        sigl_flag=True,
        chief_flag=True,
        chief_licence_prefix="GBAOG",
        paper_licence_flag=True,
        electronic_licence_flag=True,
        cover_letter_flag=False,
        cover_letter_schedule_flag=False,
        category_flag=True,
        default_licence_length_months=4,
        endorsements_flag=True,
        quantity_unlimited_flag=False,
        exp_cert_upload_flag=True,
        supporting_docs_upload_flag=True,
        multiple_commodities_flag=False,
        guidance_file_url="/docs/ApplyingForIronSteelLicence.pdf",
        licence_category_description="Goods of the commodity code in Box 10 or any other commodity code under the category valid at the time of issue.",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=False,
        type="GS",
        sub_type="IS",
        licence_type_code="SURVEILLANCE",
        sigl_flag=True,
        chief_flag=True,
        chief_licence_prefix="GBAOG",
        paper_licence_flag=True,
        electronic_licence_flag=False,
        cover_letter_flag=False,
        cover_letter_schedule_flag=False,
        category_flag=False,
        default_licence_length_months=4,
        endorsements_flag=True,
        quantity_unlimited_flag=False,
        unit_list_csv="KGS",
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=True,
        multiple_commodities_flag=False,
        guidance_file_url="/docs/DoINeedAnImportLicence.pdf",
        usage_auto_category_desc_flag=False,
        case_checklist_flag=True,
        importer_printable=False,
    )

    ImportApplicationType.objects.create(
        is_active=True,
        type="SPS",
        sub_type="SPS1",
        licence_type_code="SURVEILLANCE",
        sigl_flag=True,
        chief_flag=True,
        chief_licence_prefix="GBAOG",
        paper_licence_flag=True,
        electronic_licence_flag=True,
        cover_letter_flag=False,
        cover_letter_schedule_flag=False,
        category_flag=False,
        default_licence_length_months=4,
        endorsements_flag=True,
        quantity_unlimited_flag=False,
        unit_list_csv="KGS",
        exp_cert_upload_flag=False,
        supporting_docs_upload_flag=True,
        multiple_commodities_flag=False,
        guidance_file_url="/docs/DoINeedAnImportLicence.pdf",
        usage_auto_category_desc_flag=True,
        case_checklist_flag=False,
        importer_printable=True,
    )


class Migration(migrations.Migration):

    dependencies = [
        ("web", "0034_alter_importapplicationtype"),
    ]

    operations = [
        migrations.RunPython(add_import_data),
    ]
