# Generated by Django 5.1.3 on 2024-11-28 11:28

import uuid

import django.core.serializers.json
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("web", "0046_create_sanctions_rfi_template"),
    ]

    operations = [
        migrations.CreateModel(
            name="ECILExample",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "big_integer_field",
                    models.BigIntegerField(
                        help_text="Enter a value", verbose_name="Big integer field"
                    ),
                ),
                (
                    "editable_binary_field",
                    models.BinaryField(
                        editable=True,
                        help_text="Enter a value",
                        max_length=255,
                        verbose_name="Editable binary field",
                    ),
                ),
                (
                    "readonly_binary_field",
                    models.BinaryField(
                        default=b"example value",
                        help_text="Enter a value",
                        verbose_name="Readonly Binary field",
                    ),
                ),
                (
                    "boolean_field",
                    models.BooleanField(help_text="Enter a value", verbose_name="Boolean field"),
                ),
                (
                    "optional_boolean_field",
                    models.BooleanField(
                        help_text="Enter a value", null=True, verbose_name="Optional Boolean field"
                    ),
                ),
                (
                    "char_field",
                    models.CharField(
                        help_text="Enter a value", max_length=255, verbose_name="Char field"
                    ),
                ),
                (
                    "char_choice_field",
                    models.CharField(
                        choices=[("blue", "Blue"), ("red", "Red"), ("yellow", "Yellow")],
                        help_text="Pick a colour",
                        max_length=6,
                        null=True,
                        verbose_name="Char choice field",
                    ),
                ),
                (
                    "optional_char_field",
                    models.CharField(
                        blank=True,
                        help_text="Enter a value",
                        max_length=255,
                        verbose_name="Optional Char field",
                    ),
                ),
                (
                    "date_field",
                    models.DateField(help_text="Enter a value", verbose_name="Date field"),
                ),
                (
                    "datetime_field",
                    models.DateTimeField(help_text="Enter a value", verbose_name="Datetime field"),
                ),
                (
                    "decimal_field",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Enter a value",
                        max_digits=5,
                        verbose_name="Decimal field",
                    ),
                ),
                (
                    "duration_field",
                    models.DurationField(help_text="Enter a value", verbose_name="Duration field"),
                ),
                (
                    "email_field",
                    models.EmailField(
                        help_text="Enter a value", max_length=254, verbose_name="Email field"
                    ),
                ),
                (
                    "float_field",
                    models.FloatField(help_text="Enter a value", verbose_name="Float field"),
                ),
                (
                    "integer_field",
                    models.IntegerField(help_text="Enter a value", verbose_name="Integer field"),
                ),
                (
                    "ip_address_field",
                    models.GenericIPAddressField(
                        help_text="Enter a value", verbose_name="IP Address field"
                    ),
                ),
                (
                    "json_field",
                    models.JSONField(
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        help_text="Enter a value",
                        verbose_name="Foo",
                    ),
                ),
                (
                    "positive_big_integer_field",
                    models.PositiveBigIntegerField(
                        help_text="Enter a value", verbose_name="Positive big integer field"
                    ),
                ),
                (
                    "positive_integer_field",
                    models.PositiveIntegerField(
                        help_text="Enter a value", verbose_name="Positive integer field"
                    ),
                ),
                (
                    "positive_small_integer_field",
                    models.PositiveSmallIntegerField(
                        help_text="Enter a value", verbose_name="Positive small integer field"
                    ),
                ),
                (
                    "slug_field",
                    models.SlugField(help_text="Enter a value", verbose_name="Slug field"),
                ),
                (
                    "small_integer_field",
                    models.SmallIntegerField(
                        help_text="Enter a value", verbose_name="Small Integer field"
                    ),
                ),
                (
                    "text_field",
                    models.TextField(
                        help_text="Enter a value", max_length=4096, verbose_name="Text field"
                    ),
                ),
                (
                    "time_field",
                    models.TimeField(help_text="Enter a value", verbose_name="Time field"),
                ),
                ("url_field", models.URLField(help_text="Enter a value", verbose_name="URL field")),
                (
                    "uuid_field",
                    models.UUIDField(
                        default=uuid.uuid4, help_text="Enter a value", verbose_name="UUID field"
                    ),
                ),
                (
                    "foreign_key_field",
                    models.ForeignKey(
                        help_text="Enter a value",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="web.commodity",
                        verbose_name="Foreign key field",
                    ),
                ),
                (
                    "many_to_many_field",
                    models.ManyToManyField(
                        help_text="Enter a value",
                        related_name="+",
                        to="web.commoditygroup",
                        verbose_name="JSON field",
                    ),
                ),
            ],
        ),
    ]
