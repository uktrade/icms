# This docker-compose configuration is for ICMS development and CI environment.
# Production deployment does not use this configuration.
#
# see https://hub.docker.com/ for the images used here
version: "3.8"
services:
    db:
        image: postgres:11.11
        volumes:
            - pgdata:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=password
        ports:
            - "6000:5432"
        networks:
            - icms_backend

    web:
        restart: unless-stopped
        build:
            context: .
        # user: ${UID}
        entrypoint: dockerize -wait tcp://db:5432 -timeout 20s
        command: scripts/entry.sh
        environment:
            - PYTHONUNBUFFERED=1
            - ICMS_WEB_PORT
            - ICMS_DEBUG=True # Used in entry.sh
            - ICMS_NUM_WORKERS # Gunicorn workers number
            - ICMS_ADDRESS_API_KEY # getAddress.io api key for post code search
            # https://developer.company-information.service.gov.uk/
            - COMPANIES_HOUSE_DOMAIN
            - COMPANIES_HOUSE_TOKEN
            # DATABASE_URL not namespaced due to GOV PaaS setting DATABASE_URL env var
            - DATABASE_URL
            - ICMS_ALLOWED_HOSTS
            - ICMS_RECAPTCHA_PUBLIC_KEY
            - ICMS_RECAPTCHA_PRIVATE_KEY
            - ICMS_SILENCED_SYSTEM_CHECKS
            - ICMS_SECRET_KEY
            - ICMS_EMAIL_FROM
            - AWS_SES_ACCESS_KEY_ID
            - AWS_SES_SECRET_ACCESS_KEY
            - DJANGO_SETTINGS_MODULE
            - ELASTIC_APM_SECRET_TOKEN
            - ELASTIC_APM_ENVIRONMENT
            - ELASTIC_APM_URL
            - DISABLE_DEBUG_TOOLBAR
            - CLAM_AV_USERNAME
            - CLAM_AV_PASSWORD
            - CLAM_AV_URL
            - APP_ENV
            - ALLOW_DISASTROUS_DATA_DROPS_NEVER_ENABLE_IN_PROD
            - ALLOW_BYPASS_CHIEF_NEVER_ENABLE_IN_PROD
            - SHOW_DB_QUERIES
            - WORKBASKET_PER_PAGE
            - DJANGO_SESSION_COOKIE_AGE
            - ICMS_HMRC_DOMAIN
            - ICMS_HMRC_UPDATE_LICENCE_ENDPOINT
            - HAWK_AUTH_ID
            - HAWK_AUTH_KEY
            - SEND_LICENCE_TO_CHIEF
        # stdin_open: true
        # tty: true
        ports:
            - "8080:8080"
        depends_on:
            - db
            - redis
        volumes:
            - ./test-reports:/code/test-reports # needed for ci
            - .:/code
        networks:
            - icms_backend

    redis:
        # NOTE: Match what we currently have deployed in cloud foundry (Upgrade when needed).
        image: redis:5.0.6
        volumes:
            - redis_data:/data
        ports:
            - "6379:6379"
        networks:
            - icms_backend

    celery:
        build:
            context: .
        command: celery --app=config.celery:app worker --loglevel=info
        environment:
            - DJANGO_SETTINGS_MODULE
            - AWS_SES_ACCESS_KEY_ID
            - AWS_SES_SECRET_ACCESS_KEY
            - ICMS_HMRC_DOMAIN
            - ICMS_HMRC_UPDATE_LICENCE_ENDPOINT
            - HAWK_AUTH_ID
            - HAWK_AUTH_KEY
            - SEND_LICENCE_TO_CHIEF
        depends_on:
            - redis
        volumes:
            - .:/code
        networks:
            - icms_backend

    localstack:
        container_name: localstack_main
        image: localstack/localstack:0.14.2
        ports:
            - "4510-4559:4510-4559"  # external service port range
            - "4566:4566"            # LocalStack Edge Proxy
        environment:
            - DEBUG=0
            - DATA_DIR=/tmp/localstack/data
            - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
            - DOCKER_HOST=unix:///var/run/docker.sock
            - HOSTNAME_EXTERNAL="localstack"
            - SERVICES=s3
        volumes:
            - ls_data:/tmp/localstack
            - "/var/run/docker.sock:/var/run/docker.sock"
        networks:
            - icms_backend

    # selenium-hub:
    #     image: selenium/hub:3.141.59-vanadium
    #     container_name: selenium-hub
    #     ports:
    #         - "4444:4444"
    #         - "49154:49154"
    #     depends_on:
    #         - web

    # chrome:
    #     image: selenium/node-chrome-debug:3.141.59-vanadium
    #     volumes:
    #         - /dev/shm:/dev/shm
    #     depends_on:
    #         - selenium-hub
    #     environment:
    #         - HUB_HOST=selenium-hub
    #         - HUB_PORT=4444
    #     ports:
    #         - "5900:5900"


networks:
    icms_backend:
        name: "icms_backend"

volumes:
    pgdata:
    ls_data:
    redis_data:
